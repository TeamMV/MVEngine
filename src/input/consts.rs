use mvutils::Savable;
use winit::keyboard::{KeyCode, PhysicalKey};

#[derive(Clone, Copy, Eq, Hash, PartialEq, Debug, Savable)]
pub enum MouseButton {
    Left,
    Right,
    Middle,
    Other(u8),
}

impl From<winit::event::MouseButton> for MouseButton {
    fn from(value: winit::event::MouseButton) -> Self {
        match value {
            winit::event::MouseButton::Left => MouseButton::Left,
            winit::event::MouseButton::Right => MouseButton::Right,
            winit::event::MouseButton::Middle => MouseButton::Middle,
            winit::event::MouseButton::Back => MouseButton::Other(4),
            winit::event::MouseButton::Forward => MouseButton::Other(5),
            // no clue if this is stable lmao
            winit::event::MouseButton::Other(b) => MouseButton::Other(b as u8),
        }
    }
}

#[derive(Clone, Copy, Eq, Hash, PartialEq, Debug, Savable)]
pub enum Key {
    Key1,
    /// The '2' key over the letters.
    Key2,
    /// The '3' key over the letters.
    Key3,
    /// The '4' key over the letters.
    Key4,
    /// The '5' key over the letters.
    Key5,
    /// The '6' key over the letters.
    Key6,
    /// The '7' key over the letters.
    Key7,
    /// The '8' key over the letters.
    Key8,
    /// The '9' key over the letters.
    Key9,
    /// The '0' key over the 'O' and 'P' keys.
    Key0,

    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,

    /// The Escape key, next to F1.
    Escape,

    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,

    /// Print Screen/SysRq.
    Snapshot,
    /// Scroll Lock.
    Scroll,
    /// Pause/Break key, next to Scroll lock.
    Pause,

    /// `Insert`, next to Backspace.
    Insert,
    Home,
    Delete,
    End,
    PageDown,
    PageUp,

    Left,
    Up,
    Right,
    Down,

    /// The Backspace key, right over Enter.
    // Who in the world doesnt know what this is
    // TODO: rename.   Why?
    Back,
    /// The Enter key.
    Return,
    /// The space bar.
    Space,

    /// The "Compose" key on Linux.
    Compose,

    Numlock,
    Numpad0,
    Numpad1,
    Numpad2,
    Numpad3,
    Numpad4,
    Numpad5,
    Numpad6,
    Numpad7,
    Numpad8,
    Numpad9,

    AbntC1,
    AbntC2,
    Add,
    Apostrophe,
    Apps,
    At,
    Ax,
    Backslash,
    Backtick,
    Calculator,
    Capital,
    Colon,
    Comma,
    Convert,
    Decimal,
    Divide,
    Equals,
    Grave,
    Kana,
    Kanji,
    LAlt,
    LBracket,
    LControl,
    LMenu,
    LShift,
    LWin,
    Mail,
    MediaSelect,
    MediaStop,
    Minus,
    Multiply,
    Mute,
    MyComputer,
    NavigateForward,  // also called "Prior"
    NavigateBackward, // also called "Next"
    NextTrack,
    NoConvert,
    NumpadComma,
    NumpadEnter,
    NumpadEquals,
    OEM102,
    Period,
    PlayPause,
    Power,
    PrevTrack,
    RAlt,
    RBracket,
    RControl,
    RMenu,
    RShift,
    RWin,
    Semicolon,
    Slash,
    Sleep,
    Stop,
    Subtract,
    Sysrq,
    Tab,
    Underline,
    Unlabeled,
    VolumeDown,
    VolumeUp,
    Wake,
    WebBack,
    WebFavorites,
    WebForward,
    WebHome,
    WebRefresh,
    WebSearch,
    WebStop,
    Yen,
}

impl TryFrom<PhysicalKey> for Key {
    type Error = ();

    fn try_from(value: PhysicalKey) -> Result<Self, Self::Error> {
        if let PhysicalKey::Code(code) = value {
            Ok(match code {
                KeyCode::Backquote => Key::Backtick,
                KeyCode::Backslash => Key::Backslash,
                KeyCode::BracketLeft => Key::LBracket,
                KeyCode::BracketRight => Key::RBracket,
                KeyCode::Comma => Key::Comma,
                KeyCode::Digit0 => Key::Key0,
                KeyCode::Digit1 => Key::Key1,
                KeyCode::Digit2 => Key::Key2,
                KeyCode::Digit3 => Key::Key3,
                KeyCode::Digit4 => Key::Key4,
                KeyCode::Digit5 => Key::Key5,
                KeyCode::Digit6 => Key::Key6,
                KeyCode::Digit7 => Key::Key7,
                KeyCode::Digit8 => Key::Key8,
                KeyCode::Digit9 => Key::Key9,
                KeyCode::Equal => Key::Equals,
                KeyCode::IntlYen => Key::Yen,
                KeyCode::KeyA => Key::A,
                KeyCode::KeyB => Key::B,
                KeyCode::KeyC => Key::C,
                KeyCode::KeyD => Key::D,
                KeyCode::KeyE => Key::E,
                KeyCode::KeyF => Key::F,
                KeyCode::KeyG => Key::G,
                KeyCode::KeyH => Key::H,
                KeyCode::KeyI => Key::I,
                KeyCode::KeyJ => Key::J,
                KeyCode::KeyK => Key::K,
                KeyCode::KeyL => Key::L,
                KeyCode::KeyM => Key::M,
                KeyCode::KeyN => Key::N,
                KeyCode::KeyO => Key::O,
                KeyCode::KeyP => Key::P,
                KeyCode::KeyQ => Key::Q,
                KeyCode::KeyR => Key::R,
                KeyCode::KeyS => Key::S,
                KeyCode::KeyT => Key::T,
                KeyCode::KeyU => Key::U,
                KeyCode::KeyV => Key::V,
                KeyCode::KeyW => Key::W,
                KeyCode::KeyX => Key::X,
                KeyCode::KeyY => Key::Y,
                KeyCode::KeyZ => Key::Z,
                KeyCode::Minus => Key::Minus,
                KeyCode::Period => Key::Period,
                KeyCode::Quote => Key::Apostrophe,
                KeyCode::Semicolon => Key::Semicolon,
                KeyCode::Slash => Key::Slash,
                KeyCode::AltLeft => Key::LAlt,
                KeyCode::AltRight => Key::RAlt,
                KeyCode::Backspace => Key::Back,
                KeyCode::CapsLock => Key::Capital,
                KeyCode::ControlLeft => Key::LControl,
                KeyCode::ControlRight => Key::RControl,
                KeyCode::Enter => Key::Return,
                KeyCode::SuperLeft => Key::LWin,
                KeyCode::SuperRight => Key::RWin,
                KeyCode::ShiftLeft => Key::LShift,
                KeyCode::ShiftRight => Key::RShift,
                KeyCode::Space => Key::Space,
                KeyCode::Tab => Key::Tab,
                KeyCode::Convert => Key::Convert,
                KeyCode::KanaMode => Key::Kana,
                KeyCode::NonConvert => Key::NoConvert,
                KeyCode::Delete => Key::Delete,
                KeyCode::End => Key::End,
                KeyCode::Home => Key::Home,
                KeyCode::Insert => Key::Insert,
                KeyCode::PageDown => Key::PageDown,
                KeyCode::PageUp => Key::PageUp,
                KeyCode::ArrowDown => Key::Down,
                KeyCode::ArrowLeft => Key::Left,
                KeyCode::ArrowRight => Key::Right,
                KeyCode::ArrowUp => Key::Up,
                KeyCode::NumLock => Key::Numlock,
                KeyCode::Numpad0 => Key::Numpad0,
                KeyCode::Numpad1 => Key::Numpad1,
                KeyCode::Numpad2 => Key::Numpad2,
                KeyCode::Numpad3 => Key::Numpad3,
                KeyCode::Numpad4 => Key::Numpad4,
                KeyCode::Numpad5 => Key::Numpad5,
                KeyCode::Numpad6 => Key::Numpad6,
                KeyCode::Numpad7 => Key::Numpad7,
                KeyCode::Numpad8 => Key::Numpad8,
                KeyCode::Numpad9 => Key::Numpad9,
                KeyCode::NumpadComma => Key::NumpadComma,
                KeyCode::NumpadEnter => Key::NumpadEnter,
                KeyCode::NumpadEqual => Key::NumpadEquals,
                KeyCode::Escape => Key::Escape,
                KeyCode::ScrollLock => Key::Scroll,
                KeyCode::Pause => Key::Pause,
                KeyCode::BrowserBack => Key::WebBack,
                KeyCode::BrowserFavorites => Key::WebFavorites,
                KeyCode::BrowserForward => Key::WebForward,
                KeyCode::BrowserHome => Key::WebHome,
                KeyCode::BrowserRefresh => Key::WebRefresh,
                KeyCode::BrowserSearch => Key::WebSearch,
                KeyCode::BrowserStop => Key::WebStop,
                KeyCode::MediaSelect => Key::MediaSelect,
                KeyCode::MediaStop => Key::MediaStop,
                KeyCode::Power => Key::Power,
                KeyCode::Sleep => Key::Sleep,
                KeyCode::AudioVolumeDown => Key::VolumeDown,
                KeyCode::AudioVolumeUp => Key::VolumeUp,
                KeyCode::WakeUp => Key::Wake,
                KeyCode::F1 => Key::F1,
                KeyCode::F2 => Key::F2,
                KeyCode::F3 => Key::F3,
                KeyCode::F4 => Key::F4,
                KeyCode::F5 => Key::F5,
                KeyCode::F6 => Key::F6,
                KeyCode::F7 => Key::F7,
                KeyCode::F8 => Key::F8,
                KeyCode::F9 => Key::F9,
                KeyCode::F10 => Key::F10,
                KeyCode::F11 => Key::F11,
                KeyCode::F12 => Key::F12,
                KeyCode::F13 => Key::F13,
                KeyCode::F14 => Key::F14,
                KeyCode::F15 => Key::F15,

                // what the fuck are some of these
                KeyCode::IntlBackslash => return Err(()),
                KeyCode::IntlRo => return Err(()),
                KeyCode::ContextMenu => return Err(()),
                KeyCode::Lang1 => return Err(()),
                KeyCode::Lang2 => return Err(()),
                KeyCode::Lang3 => return Err(()),
                KeyCode::Lang4 => return Err(()),
                KeyCode::Lang5 => return Err(()),
                KeyCode::Help => return Err(()),
                KeyCode::NumpadAdd => return Err(()),
                KeyCode::NumpadBackspace => return Err(()),
                KeyCode::NumpadClear => return Err(()),
                KeyCode::NumpadClearEntry => return Err(()),
                KeyCode::NumpadDecimal => return Err(()),
                KeyCode::NumpadDivide => return Err(()),
                KeyCode::NumpadHash => return Err(()),
                KeyCode::NumpadMemoryAdd => return Err(()),
                KeyCode::NumpadMemoryClear => return Err(()),
                KeyCode::NumpadMemoryRecall => return Err(()),
                KeyCode::NumpadMemoryStore => return Err(()),
                KeyCode::NumpadMemorySubtract => return Err(()),
                KeyCode::NumpadMultiply => return Err(()),
                KeyCode::NumpadParenLeft => return Err(()),
                KeyCode::NumpadParenRight => return Err(()),
                KeyCode::NumpadStar => return Err(()),
                KeyCode::NumpadSubtract => return Err(()),
                KeyCode::Fn => return Err(()),
                KeyCode::FnLock => return Err(()),
                KeyCode::PrintScreen => return Err(()),
                KeyCode::Eject => return Err(()),
                KeyCode::LaunchApp1 => return Err(()),
                KeyCode::LaunchApp2 => return Err(()),
                KeyCode::LaunchMail => return Err(()),
                KeyCode::MediaPlayPause => return Err(()),
                KeyCode::MediaTrackNext => return Err(()),
                KeyCode::MediaTrackPrevious => return Err(()),
                KeyCode::AudioVolumeMute => return Err(()),
                KeyCode::Meta => return Err(()),
                KeyCode::Hyper => return Err(()),
                KeyCode::Turbo => return Err(()),
                KeyCode::Abort => return Err(()),
                KeyCode::Resume => return Err(()),
                KeyCode::Suspend => return Err(()),
                KeyCode::Again => return Err(()),
                KeyCode::Copy => return Err(()),
                KeyCode::Cut => return Err(()),
                KeyCode::Find => return Err(()),
                KeyCode::Open => return Err(()),
                KeyCode::Paste => return Err(()),
                KeyCode::Props => return Err(()),
                KeyCode::Select => return Err(()),
                KeyCode::Undo => return Err(()),
                KeyCode::Hiragana => return Err(()),
                KeyCode::Katakana => return Err(()),

                // all F16-F35 keys
                _ => return Err(()),
            })
        } else {
            Err(())
        }
    }
}
